using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Altus.Core.Data;
using Altus.Core;

namespace Altus.Core.Dynamic.Config
{
    [StorageMapping("PropertyEx")]
    public class DynamicPropertyConfig
    {
        public DynamicPropertyConfig() { }
          
        [StorageFieldMapping("Id", StorageFieldModifiers.Key | StorageFieldModifiers.AutoGenerated)]
        [StorageFieldWriteConstraint(WriteConstraintType.IsNotNull)]
        public int Id { get; set; }

        [StorageFieldMapping("Name")]
        [StorageFieldWriteConstraint(WriteConstraintType.IsNotNull)]
        public string Name { get; set; }

        [StorageFieldMapping("Type")]
        [StorageFieldWriteConstraint(WriteConstraintType.IsNotNull)]
        public string TypeTag { get; set; }
        public Type Type 
        {
            get
            {
                return TypeHelper.GetType(this.TypeTag);
            }            
        }
                
        public string References { get; set; }

        [StorageFieldMapping("Enabled")]       
        public bool Enabled { get; set; }
    }    
}
