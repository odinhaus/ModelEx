//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace moby.common.data.ef
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Calculator> Calculators
        {
            get
            {
                if ((_Calculators == null))
                {
                    _Calculators = base.CreateObjectSet<Calculator>("Calculators");
                }
                return _Calculators;
            }
        }
        private ObjectSet<Calculator> _Calculators;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentType> ContentTypes
        {
            get
            {
                if ((_ContentTypes == null))
                {
                    _ContentTypes = base.CreateObjectSet<ContentType>("ContentTypes");
                }
                return _ContentTypes;
            }
        }
        private ObjectSet<ContentType> _ContentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Field> Fields
        {
            get
            {
                if ((_Fields == null))
                {
                    _Fields = base.CreateObjectSet<Field>("Fields");
                }
                return _Fields;
            }
        }
        private ObjectSet<Field> _Fields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldField> FieldFields
        {
            get
            {
                if ((_FieldFields == null))
                {
                    _FieldFields = base.CreateObjectSet<FieldField>("FieldFields");
                }
                return _FieldFields;
            }
        }
        private ObjectSet<FieldField> _FieldFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldRelationshipType> FieldRelationshipTypes
        {
            get
            {
                if ((_FieldRelationshipTypes == null))
                {
                    _FieldRelationshipTypes = base.CreateObjectSet<FieldRelationshipType>("FieldRelationshipTypes");
                }
                return _FieldRelationshipTypes;
            }
        }
        private ObjectSet<FieldRelationshipType> _FieldRelationshipTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldValueType> FieldValueTypes
        {
            get
            {
                if ((_FieldValueTypes == null))
                {
                    _FieldValueTypes = base.CreateObjectSet<FieldValueType>("FieldValueTypes");
                }
                return _FieldValueTypes;
            }
        }
        private ObjectSet<FieldValueType> _FieldValueTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FunctionEx> FunctionExes
        {
            get
            {
                if ((_FunctionExes == null))
                {
                    _FunctionExes = base.CreateObjectSet<FunctionEx>("FunctionExes");
                }
                return _FunctionExes;
            }
        }
        private ObjectSet<FunctionEx> _FunctionExes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FunctionExInstance> FunctionExInstances
        {
            get
            {
                if ((_FunctionExInstances == null))
                {
                    _FunctionExInstances = base.CreateObjectSet<FunctionExInstance>("FunctionExInstances");
                }
                return _FunctionExInstances;
            }
        }
        private ObjectSet<FunctionExInstance> _FunctionExInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HistoryField> HistoryFields
        {
            get
            {
                if ((_HistoryFields == null))
                {
                    _HistoryFields = base.CreateObjectSet<HistoryField>("HistoryFields");
                }
                return _HistoryFields;
            }
        }
        private ObjectSet<HistoryField> _HistoryFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HistoryNode> HistoryNodes
        {
            get
            {
                if ((_HistoryNodes == null))
                {
                    _HistoryNodes = base.CreateObjectSet<HistoryNode>("HistoryNodes");
                }
                return _HistoryNodes;
            }
        }
        private ObjectSet<HistoryNode> _HistoryNodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Identity> Identities
        {
            get
            {
                if ((_Identities == null))
                {
                    _Identities = base.CreateObjectSet<Identity>("Identities");
                }
                return _Identities;
            }
        }
        private ObjectSet<Identity> _Identities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IdentityRole> IdentityRoles
        {
            get
            {
                if ((_IdentityRoles == null))
                {
                    _IdentityRoles = base.CreateObjectSet<IdentityRole>("IdentityRoles");
                }
                return _IdentityRoles;
            }
        }
        private ObjectSet<IdentityRole> _IdentityRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Network> Networks
        {
            get
            {
                if ((_Networks == null))
                {
                    _Networks = base.CreateObjectSet<Network>("Networks");
                }
                return _Networks;
            }
        }
        private ObjectSet<Network> _Networks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetworkBridge> NetworkBridges
        {
            get
            {
                if ((_NetworkBridges == null))
                {
                    _NetworkBridges = base.CreateObjectSet<NetworkBridge>("NetworkBridges");
                }
                return _NetworkBridges;
            }
        }
        private ObjectSet<NetworkBridge> _NetworkBridges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetworkTopology> NetworkTopologies
        {
            get
            {
                if ((_NetworkTopologies == null))
                {
                    _NetworkTopologies = base.CreateObjectSet<NetworkTopology>("NetworkTopologies");
                }
                return _NetworkTopologies;
            }
        }
        private ObjectSet<NetworkTopology> _NetworkTopologies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetworkTopologyType> NetworkTopologyTypes
        {
            get
            {
                if ((_NetworkTopologyTypes == null))
                {
                    _NetworkTopologyTypes = base.CreateObjectSet<NetworkTopologyType>("NetworkTopologyTypes");
                }
                return _NetworkTopologyTypes;
            }
        }
        private ObjectSet<NetworkTopologyType> _NetworkTopologyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetworkType> NetworkTypes
        {
            get
            {
                if ((_NetworkTypes == null))
                {
                    _NetworkTypes = base.CreateObjectSet<NetworkType>("NetworkTypes");
                }
                return _NetworkTypes;
            }
        }
        private ObjectSet<NetworkType> _NetworkTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Node> Nodes
        {
            get
            {
                if ((_Nodes == null))
                {
                    _Nodes = base.CreateObjectSet<Node>("Nodes");
                }
                return _Nodes;
            }
        }
        private ObjectSet<Node> _Nodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NodeEndPoint> NodeEndPoints
        {
            get
            {
                if ((_NodeEndPoints == null))
                {
                    _NodeEndPoints = base.CreateObjectSet<NodeEndPoint>("NodeEndPoints");
                }
                return _NodeEndPoints;
            }
        }
        private ObjectSet<NodeEndPoint> _NodeEndPoints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Object> Objects
        {
            get
            {
                if ((_Objects == null))
                {
                    _Objects = base.CreateObjectSet<Object>("Objects");
                }
                return _Objects;
            }
        }
        private ObjectSet<Object> _Objects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ObjectHistory> ObjectHistories
        {
            get
            {
                if ((_ObjectHistories == null))
                {
                    _ObjectHistories = base.CreateObjectSet<ObjectHistory>("ObjectHistories");
                }
                return _ObjectHistories;
            }
        }
        private ObjectSet<ObjectHistory> _ObjectHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ObjectSpace> ObjectSpaces
        {
            get
            {
                if ((_ObjectSpaces == null))
                {
                    _ObjectSpaces = base.CreateObjectSet<ObjectSpace>("ObjectSpaces");
                }
                return _ObjectSpaces;
            }
        }
        private ObjectSet<ObjectSpace> _ObjectSpaces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ObjectSpaceObject> ObjectSpaceObjects
        {
            get
            {
                if ((_ObjectSpaceObjects == null))
                {
                    _ObjectSpaceObjects = base.CreateObjectSet<ObjectSpaceObject>("ObjectSpaceObjects");
                }
                return _ObjectSpaceObjects;
            }
        }
        private ObjectSet<ObjectSpaceObject> _ObjectSpaceObjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrganizationIdentity> OrganizationIdentities
        {
            get
            {
                if ((_OrganizationIdentities == null))
                {
                    _OrganizationIdentities = base.CreateObjectSet<OrganizationIdentity>("OrganizationIdentities");
                }
                return _OrganizationIdentities;
            }
        }
        private ObjectSet<OrganizationIdentity> _OrganizationIdentities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Platform> Platforms
        {
            get
            {
                if ((_Platforms == null))
                {
                    _Platforms = base.CreateObjectSet<Platform>("Platforms");
                }
                return _Platforms;
            }
        }
        private ObjectSet<Platform> _Platforms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlatformContentType> PlatformContentTypes
        {
            get
            {
                if ((_PlatformContentTypes == null))
                {
                    _PlatformContentTypes = base.CreateObjectSet<PlatformContentType>("PlatformContentTypes");
                }
                return _PlatformContentTypes;
            }
        }
        private ObjectSet<PlatformContentType> _PlatformContentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlatformOrganization> PlatformOrganizations
        {
            get
            {
                if ((_PlatformOrganizations == null))
                {
                    _PlatformOrganizations = base.CreateObjectSet<PlatformOrganization>("PlatformOrganizations");
                }
                return _PlatformOrganizations;
            }
        }
        private ObjectSet<PlatformOrganization> _PlatformOrganizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlatformRole> PlatformRoles
        {
            get
            {
                if ((_PlatformRoles == null))
                {
                    _PlatformRoles = base.CreateObjectSet<PlatformRole>("PlatformRoles");
                }
                return _PlatformRoles;
            }
        }
        private ObjectSet<PlatformRole> _PlatformRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyEx> PropertyExes
        {
            get
            {
                if ((_PropertyExes == null))
                {
                    _PropertyExes = base.CreateObjectSet<PropertyEx>("PropertyExes");
                }
                return _PropertyExes;
            }
        }
        private ObjectSet<PropertyEx> _PropertyExes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyExEvaluated> PropertyExEvaluateds
        {
            get
            {
                if ((_PropertyExEvaluateds == null))
                {
                    _PropertyExEvaluateds = base.CreateObjectSet<PropertyExEvaluated>("PropertyExEvaluateds");
                }
                return _PropertyExEvaluateds;
            }
        }
        private ObjectSet<PropertyExEvaluated> _PropertyExEvaluateds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyExNumeric> PropertyExNumerics
        {
            get
            {
                if ((_PropertyExNumerics == null))
                {
                    _PropertyExNumerics = base.CreateObjectSet<PropertyExNumeric>("PropertyExNumerics");
                }
                return _PropertyExNumerics;
            }
        }
        private ObjectSet<PropertyExNumeric> _PropertyExNumerics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyExText> PropertyExTexts
        {
            get
            {
                if ((_PropertyExTexts == null))
                {
                    _PropertyExTexts = base.CreateObjectSet<PropertyExText>("PropertyExTexts");
                }
                return _PropertyExTexts;
            }
        }
        private ObjectSet<PropertyExText> _PropertyExTexts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyExTime> PropertyExTimes
        {
            get
            {
                if ((_PropertyExTimes == null))
                {
                    _PropertyExTimes = base.CreateObjectSet<PropertyExTime>("PropertyExTimes");
                }
                return _PropertyExTimes;
            }
        }
        private ObjectSet<PropertyExTime> _PropertyExTimes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Protocol> Protocols
        {
            get
            {
                if ((_Protocols == null))
                {
                    _Protocols = base.CreateObjectSet<Protocol>("Protocols");
                }
                return _Protocols;
            }
        }
        private ObjectSet<Protocol> _Protocols;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SQLITEADMIN_QUERIES> SQLITEADMIN_QUERIES
        {
            get
            {
                if ((_SQLITEADMIN_QUERIES == null))
                {
                    _SQLITEADMIN_QUERIES = base.CreateObjectSet<SQLITEADMIN_QUERIES>("SQLITEADMIN_QUERIES");
                }
                return _SQLITEADMIN_QUERIES;
            }
        }
        private ObjectSet<SQLITEADMIN_QUERIES> _SQLITEADMIN_QUERIES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Topic> Topics
        {
            get
            {
                if ((_Topics == null))
                {
                    _Topics = base.CreateObjectSet<Topic>("Topics");
                }
                return _Topics;
            }
        }
        private ObjectSet<Topic> _Topics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TopicField> TopicFields
        {
            get
            {
                if ((_TopicFields == null))
                {
                    _TopicFields = base.CreateObjectSet<TopicField>("TopicFields");
                }
                return _TopicFields;
            }
        }
        private ObjectSet<TopicField> _TopicFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UINode> UINodes
        {
            get
            {
                if ((_UINodes == null))
                {
                    _UINodes = base.CreateObjectSet<UINode>("UINodes");
                }
                return _UINodes;
            }
        }
        private ObjectSet<UINode> _UINodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UINodeType> UINodeTypes
        {
            get
            {
                if ((_UINodeTypes == null))
                {
                    _UINodeTypes = base.CreateObjectSet<UINodeType>("UINodeTypes");
                }
                return _UINodeTypes;
            }
        }
        private ObjectSet<UINodeType> _UINodeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<View> Views
        {
            get
            {
                if ((_Views == null))
                {
                    _Views = base.CreateObjectSet<View>("Views");
                }
                return _Views;
            }
        }
        private ObjectSet<View> _Views;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ViewTopic> ViewTopics
        {
            get
            {
                if ((_ViewTopics == null))
                {
                    _ViewTopics = base.CreateObjectSet<ViewTopic>("ViewTopics");
                }
                return _ViewTopics;
            }
        }
        private ObjectSet<ViewTopic> _ViewTopics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ViewType> ViewTypes
        {
            get
            {
                if ((_ViewTypes == null))
                {
                    _ViewTypes = base.CreateObjectSet<ViewType>("ViewTypes");
                }
                return _ViewTypes;
            }
        }
        private ObjectSet<ViewType> _ViewTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Window> Windows
        {
            get
            {
                if ((_Windows == null))
                {
                    _Windows = base.CreateObjectSet<Window>("Windows");
                }
                return _Windows;
            }
        }
        private ObjectSet<Window> _Windows;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WindowView> WindowViews
        {
            get
            {
                if ((_WindowViews == null))
                {
                    _WindowViews = base.CreateObjectSet<WindowView>("WindowViews");
                }
                return _WindowViews;
            }
        }
        private ObjectSet<WindowView> _WindowViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WPFNode> WPFNodes
        {
            get
            {
                if ((_WPFNodes == null))
                {
                    _WPFNodes = base.CreateObjectSet<WPFNode>("WPFNodes");
                }
                return _WPFNodes;
            }
        }
        private ObjectSet<WPFNode> _WPFNodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WPFTemplate> WPFTemplates
        {
            get
            {
                if ((_WPFTemplates == null))
                {
                    _WPFTemplates = base.CreateObjectSet<WPFTemplate>("WPFTemplates");
                }
                return _WPFTemplates;
            }
        }
        private ObjectSet<WPFTemplate> _WPFTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WPFTemplateView> WPFTemplateViews
        {
            get
            {
                if ((_WPFTemplateViews == null))
                {
                    _WPFTemplateViews = base.CreateObjectSet<WPFTemplateView>("WPFTemplateViews");
                }
                return _WPFTemplateViews;
            }
        }
        private ObjectSet<WPFTemplateView> _WPFTemplateViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WPFWindow> WPFWindows
        {
            get
            {
                if ((_WPFWindows == null))
                {
                    _WPFWindows = base.CreateObjectSet<WPFWindow>("WPFWindows");
                }
                return _WPFWindows;
            }
        }
        private ObjectSet<WPFWindow> _WPFWindows;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Calculators EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculators(Calculator calculator)
        {
            base.AddObject("Calculators", calculator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentTypes(ContentType contentType)
        {
            base.AddObject("ContentTypes", contentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFields(Field field)
        {
            base.AddObject("Fields", field);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldFields(FieldField fieldField)
        {
            base.AddObject("FieldFields", fieldField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldRelationshipTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldRelationshipTypes(FieldRelationshipType fieldRelationshipType)
        {
            base.AddObject("FieldRelationshipTypes", fieldRelationshipType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldValueTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldValueTypes(FieldValueType fieldValueType)
        {
            base.AddObject("FieldValueTypes", fieldValueType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FunctionExes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFunctionExes(FunctionEx functionEx)
        {
            base.AddObject("FunctionExes", functionEx);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FunctionExInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFunctionExInstances(FunctionExInstance functionExInstance)
        {
            base.AddObject("FunctionExInstances", functionExInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HistoryFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistoryFields(HistoryField historyField)
        {
            base.AddObject("HistoryFields", historyField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HistoryNodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistoryNodes(HistoryNode historyNode)
        {
            base.AddObject("HistoryNodes", historyNode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Identities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIdentities(Identity identity)
        {
            base.AddObject("Identities", identity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IdentityRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIdentityRoles(IdentityRole identityRole)
        {
            base.AddObject("IdentityRoles", identityRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Networks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetworks(Network network)
        {
            base.AddObject("Networks", network);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetworkBridges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetworkBridges(NetworkBridge networkBridge)
        {
            base.AddObject("NetworkBridges", networkBridge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetworkTopologies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetworkTopologies(NetworkTopology networkTopology)
        {
            base.AddObject("NetworkTopologies", networkTopology);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetworkTopologyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetworkTopologyTypes(NetworkTopologyType networkTopologyType)
        {
            base.AddObject("NetworkTopologyTypes", networkTopologyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetworkTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetworkTypes(NetworkType networkType)
        {
            base.AddObject("NetworkTypes", networkType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Nodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNodes(Node node)
        {
            base.AddObject("Nodes", node);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NodeEndPoints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNodeEndPoints(NodeEndPoint nodeEndPoint)
        {
            base.AddObject("NodeEndPoints", nodeEndPoint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Objects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjects(Object @object)
        {
            base.AddObject("Objects", @object);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ObjectHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectHistories(ObjectHistory objectHistory)
        {
            base.AddObject("ObjectHistories", objectHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ObjectSpaces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectSpaces(ObjectSpace objectSpace)
        {
            base.AddObject("ObjectSpaces", objectSpace);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ObjectSpaceObjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectSpaceObjects(ObjectSpaceObject objectSpaceObject)
        {
            base.AddObject("ObjectSpaceObjects", objectSpaceObject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrganizationIdentities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizationIdentities(OrganizationIdentity organizationIdentity)
        {
            base.AddObject("OrganizationIdentities", organizationIdentity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Platforms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlatforms(Platform platform)
        {
            base.AddObject("Platforms", platform);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlatformContentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlatformContentTypes(PlatformContentType platformContentType)
        {
            base.AddObject("PlatformContentTypes", platformContentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlatformOrganizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlatformOrganizations(PlatformOrganization platformOrganization)
        {
            base.AddObject("PlatformOrganizations", platformOrganization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlatformRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlatformRoles(PlatformRole platformRole)
        {
            base.AddObject("PlatformRoles", platformRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyExes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyExes(PropertyEx propertyEx)
        {
            base.AddObject("PropertyExes", propertyEx);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyExEvaluateds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyExEvaluateds(PropertyExEvaluated propertyExEvaluated)
        {
            base.AddObject("PropertyExEvaluateds", propertyExEvaluated);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyExNumerics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyExNumerics(PropertyExNumeric propertyExNumeric)
        {
            base.AddObject("PropertyExNumerics", propertyExNumeric);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyExTexts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyExTexts(PropertyExText propertyExText)
        {
            base.AddObject("PropertyExTexts", propertyExText);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyExTimes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyExTimes(PropertyExTime propertyExTime)
        {
            base.AddObject("PropertyExTimes", propertyExTime);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Protocols EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProtocols(Protocol protocol)
        {
            base.AddObject("Protocols", protocol);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SQLITEADMIN_QUERIES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSQLITEADMIN_QUERIES(SQLITEADMIN_QUERIES sQLITEADMIN_QUERIES)
        {
            base.AddObject("SQLITEADMIN_QUERIES", sQLITEADMIN_QUERIES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Topics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopics(Topic topic)
        {
            base.AddObject("Topics", topic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TopicFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopicFields(TopicField topicField)
        {
            base.AddObject("TopicFields", topicField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UINodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUINodes(UINode uINode)
        {
            base.AddObject("UINodes", uINode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UINodeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUINodeTypes(UINodeType uINodeType)
        {
            base.AddObject("UINodeTypes", uINodeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Views EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToViews(View view)
        {
            base.AddObject("Views", view);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ViewTopics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToViewTopics(ViewTopic viewTopic)
        {
            base.AddObject("ViewTopics", viewTopic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ViewTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToViewTypes(ViewType viewType)
        {
            base.AddObject("ViewTypes", viewType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Windows EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWindows(Window window)
        {
            base.AddObject("Windows", window);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WindowViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWindowViews(WindowView windowView)
        {
            base.AddObject("WindowViews", windowView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WPFNodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWPFNodes(WPFNode wPFNode)
        {
            base.AddObject("WPFNodes", wPFNode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WPFTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWPFTemplates(WPFTemplate wPFTemplate)
        {
            base.AddObject("WPFTemplates", wPFTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WPFTemplateViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWPFTemplateViews(WPFTemplateView wPFTemplateView)
        {
            base.AddObject("WPFTemplateViews", wPFTemplateView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WPFWindows EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWPFWindows(WPFWindow wPFWindow)
        {
            base.AddObject("WPFWindows", wPFWindow);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Calculator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Calculator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Calculator object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="targetObjectId">Initial value of the TargetObjectId property.</param>
        /// <param name="targetFieldId">Initial value of the TargetFieldId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="condition">Initial value of the Condition property.</param>
        /// <param name="formula">Initial value of the Formula property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        public static Calculator CreateCalculator(global::System.Int64 id, global::System.Int64 eventId, global::System.Int64 targetObjectId, global::System.Int64 targetFieldId, global::System.String name, global::System.String condition, global::System.String formula, global::System.Boolean enabled)
        {
            Calculator calculator = new Calculator();
            calculator.Id = id;
            calculator.EventId = eventId;
            calculator.TargetObjectId = targetObjectId;
            calculator.TargetFieldId = targetFieldId;
            calculator.Name = name;
            calculator.Condition = condition;
            calculator.Formula = formula;
            calculator.Enabled = enabled;
            return calculator;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Int64 _EventId;
        partial void OnEventIdChanging(global::System.Int64 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TargetObjectId
        {
            get
            {
                return _TargetObjectId;
            }
            set
            {
                OnTargetObjectIdChanging(value);
                ReportPropertyChanging("TargetObjectId");
                _TargetObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TargetObjectId");
                OnTargetObjectIdChanged();
            }
        }
        private global::System.Int64 _TargetObjectId;
        partial void OnTargetObjectIdChanging(global::System.Int64 value);
        partial void OnTargetObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TargetFieldId
        {
            get
            {
                return _TargetFieldId;
            }
            set
            {
                OnTargetFieldIdChanging(value);
                ReportPropertyChanging("TargetFieldId");
                _TargetFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TargetFieldId");
                OnTargetFieldIdChanged();
            }
        }
        private global::System.Int64 _TargetFieldId;
        partial void OnTargetFieldIdChanging(global::System.Int64 value);
        partial void OnTargetFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Condition
        {
            get
            {
                return _Condition;
            }
            set
            {
                OnConditionChanging(value);
                ReportPropertyChanging("Condition");
                _Condition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Condition");
                OnConditionChanged();
            }
        }
        private global::System.String _Condition;
        partial void OnConditionChanging(global::System.String value);
        partial void OnConditionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Formula
        {
            get
            {
                return _Formula;
            }
            set
            {
                OnFormulaChanging(value);
                ReportPropertyChanging("Formula");
                _Formula = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Formula");
                OnFormulaChanged();
            }
        }
        private global::System.String _Formula;
        partial void OnFormulaChanging(global::System.String value);
        partial void OnFormulaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="ContentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contentType1">Initial value of the ContentType1 property.</param>
        /// <param name="extension">Initial value of the Extension property.</param>
        public static ContentType CreateContentType(global::System.Int64 id, global::System.String contentType1, global::System.String extension)
        {
            ContentType contentType = new ContentType();
            contentType.Id = id;
            contentType.ContentType1 = contentType1;
            contentType.Extension = extension;
            return contentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentType1
        {
            get
            {
                return _ContentType1;
            }
            set
            {
                OnContentType1Changing(value);
                ReportPropertyChanging("ContentType1");
                _ContentType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentType1");
                OnContentType1Changed();
            }
        }
        private global::System.String _ContentType1;
        partial void OnContentType1Changing(global::System.String value);
        partial void OnContentType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="eventTypeId">Initial value of the EventTypeId property.</param>
        public static Event CreateEvent(global::System.Int64 id, global::System.Int64 fieldId, global::System.Int64 objectId, global::System.Int64 eventTypeId)
        {
            Event @event = new Event();
            @event.Id = id;
            @event.FieldId = fieldId;
            @event.ObjectId = objectId;
            @event.EventTypeId = eventTypeId;
            return @event;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                OnFieldIdChanging(value);
                ReportPropertyChanging("FieldId");
                _FieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldId");
                OnFieldIdChanged();
            }
        }
        private global::System.Int64 _FieldId;
        partial void OnFieldIdChanging(global::System.Int64 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                OnObjectIdChanging(value);
                ReportPropertyChanging("ObjectId");
                _ObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectId");
                OnObjectIdChanged();
            }
        }
        private global::System.Int64 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int64 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EventTypeId
        {
            get
            {
                return _EventTypeId;
            }
            set
            {
                OnEventTypeIdChanging(value);
                ReportPropertyChanging("EventTypeId");
                _EventTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTypeId");
                OnEventTypeIdChanged();
            }
        }
        private global::System.Int64 _EventTypeId;
        partial void OnEventTypeIdChanging(global::System.Int64 value);
        partial void OnEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EventType CreateEventType(global::System.Int64 id, global::System.String name)
        {
            EventType eventType = new EventType();
            eventType.Id = id;
            eventType.Name = name;
            return eventType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Field")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Field : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Field object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dataType">Initial value of the DataType property.</param>
        /// <param name="fieldValueTypeId">Initial value of the FieldValueTypeId property.</param>
        public static Field CreateField(global::System.Int64 id, global::System.Int64 objectId, global::System.String name, global::System.String dataType, global::System.Int64 fieldValueTypeId)
        {
            Field field = new Field();
            field.Id = id;
            field.ObjectId = objectId;
            field.Name = name;
            field.DataType = dataType;
            field.FieldValueTypeId = fieldValueTypeId;
            return field;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int64 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FieldValueTypeId
        {
            get
            {
                return _FieldValueTypeId;
            }
            set
            {
                OnFieldValueTypeIdChanging(value);
                ReportPropertyChanging("FieldValueTypeId");
                _FieldValueTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldValueTypeId");
                OnFieldValueTypeIdChanged();
            }
        }
        private global::System.Int64 _FieldValueTypeId;
        partial void OnFieldValueTypeIdChanging(global::System.Int64 value);
        partial void OnFieldValueTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="FieldField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldField object.
        /// </summary>
        /// <param name="sourceFieldId">Initial value of the SourceFieldId property.</param>
        /// <param name="sourceObjectId">Initial value of the SourceObjectId property.</param>
        /// <param name="targetFieldId">Initial value of the TargetFieldId property.</param>
        /// <param name="targetObjectId">Initial value of the TargetObjectId property.</param>
        /// <param name="fieldRelationshipTypeId">Initial value of the FieldRelationshipTypeId property.</param>
        public static FieldField CreateFieldField(global::System.Int64 sourceFieldId, global::System.Int64 sourceObjectId, global::System.Int64 targetFieldId, global::System.Int64 targetObjectId, global::System.Int64 fieldRelationshipTypeId)
        {
            FieldField fieldField = new FieldField();
            fieldField.SourceFieldId = sourceFieldId;
            fieldField.SourceObjectId = sourceObjectId;
            fieldField.TargetFieldId = targetFieldId;
            fieldField.TargetObjectId = targetObjectId;
            fieldField.FieldRelationshipTypeId = fieldRelationshipTypeId;
            return fieldField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SourceFieldId
        {
            get
            {
                return _SourceFieldId;
            }
            set
            {
                if (_SourceFieldId != value)
                {
                    OnSourceFieldIdChanging(value);
                    ReportPropertyChanging("SourceFieldId");
                    _SourceFieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceFieldId");
                    OnSourceFieldIdChanged();
                }
            }
        }
        private global::System.Int64 _SourceFieldId;
        partial void OnSourceFieldIdChanging(global::System.Int64 value);
        partial void OnSourceFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SourceObjectId
        {
            get
            {
                return _SourceObjectId;
            }
            set
            {
                if (_SourceObjectId != value)
                {
                    OnSourceObjectIdChanging(value);
                    ReportPropertyChanging("SourceObjectId");
                    _SourceObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceObjectId");
                    OnSourceObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _SourceObjectId;
        partial void OnSourceObjectIdChanging(global::System.Int64 value);
        partial void OnSourceObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TargetFieldId
        {
            get
            {
                return _TargetFieldId;
            }
            set
            {
                if (_TargetFieldId != value)
                {
                    OnTargetFieldIdChanging(value);
                    ReportPropertyChanging("TargetFieldId");
                    _TargetFieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TargetFieldId");
                    OnTargetFieldIdChanged();
                }
            }
        }
        private global::System.Int64 _TargetFieldId;
        partial void OnTargetFieldIdChanging(global::System.Int64 value);
        partial void OnTargetFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TargetObjectId
        {
            get
            {
                return _TargetObjectId;
            }
            set
            {
                if (_TargetObjectId != value)
                {
                    OnTargetObjectIdChanging(value);
                    ReportPropertyChanging("TargetObjectId");
                    _TargetObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TargetObjectId");
                    OnTargetObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _TargetObjectId;
        partial void OnTargetObjectIdChanging(global::System.Int64 value);
        partial void OnTargetObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FieldRelationshipTypeId
        {
            get
            {
                return _FieldRelationshipTypeId;
            }
            set
            {
                if (_FieldRelationshipTypeId != value)
                {
                    OnFieldRelationshipTypeIdChanging(value);
                    ReportPropertyChanging("FieldRelationshipTypeId");
                    _FieldRelationshipTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FieldRelationshipTypeId");
                    OnFieldRelationshipTypeIdChanged();
                }
            }
        }
        private global::System.Int64 _FieldRelationshipTypeId;
        partial void OnFieldRelationshipTypeIdChanging(global::System.Int64 value);
        partial void OnFieldRelationshipTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="FieldRelationshipType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldRelationshipType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldRelationshipType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FieldRelationshipType CreateFieldRelationshipType(global::System.Int64 id, global::System.String name)
        {
            FieldRelationshipType fieldRelationshipType = new FieldRelationshipType();
            fieldRelationshipType.Id = id;
            fieldRelationshipType.Name = name;
            return fieldRelationshipType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="FieldValueType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldValueType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldValueType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FieldValueType CreateFieldValueType(global::System.Int64 id, global::System.String name)
        {
            FieldValueType fieldValueType = new FieldValueType();
            fieldValueType.Id = id;
            fieldValueType.Name = name;
            return fieldValueType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="FunctionEx")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FunctionEx : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FunctionEx object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="bodyCS">Initial value of the BodyCS property.</param>
        public static FunctionEx CreateFunctionEx(global::System.Int64 id, global::System.String name, global::System.String bodyCS)
        {
            FunctionEx functionEx = new FunctionEx();
            functionEx.Id = id;
            functionEx.Name = name;
            functionEx.BodyCS = bodyCS;
            return functionEx;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BodyCS
        {
            get
            {
                return _BodyCS;
            }
            set
            {
                OnBodyCSChanging(value);
                ReportPropertyChanging("BodyCS");
                _BodyCS = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BodyCS");
                OnBodyCSChanged();
            }
        }
        private global::System.String _BodyCS;
        partial void OnBodyCSChanging(global::System.String value);
        partial void OnBodyCSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String References
        {
            get
            {
                return _References;
            }
            set
            {
                OnReferencesChanging(value);
                ReportPropertyChanging("References");
                _References = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("References");
                OnReferencesChanged();
            }
        }
        private global::System.String _References;
        partial void OnReferencesChanging(global::System.String value);
        partial void OnReferencesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String guid
        {
            get
            {
                return _guid;
            }
            set
            {
                OnguidChanging(value);
                ReportPropertyChanging("guid");
                _guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("guid");
                OnguidChanged();
            }
        }
        private global::System.String _guid;
        partial void OnguidChanging(global::System.String value);
        partial void OnguidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="FunctionExInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FunctionExInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FunctionExInstance object.
        /// </summary>
        /// <param name="instanceType">Initial value of the InstanceType property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="functionExId">Initial value of the FunctionExId property.</param>
        public static FunctionExInstance CreateFunctionExInstance(global::System.String instanceType, global::System.Int64 instanceId, global::System.Int64 objectId, global::System.Int64 functionExId)
        {
            FunctionExInstance functionExInstance = new FunctionExInstance();
            functionExInstance.InstanceType = instanceType;
            functionExInstance.InstanceId = instanceId;
            functionExInstance.ObjectId = objectId;
            functionExInstance.FunctionExId = functionExId;
            return functionExInstance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceType
        {
            get
            {
                return _InstanceType;
            }
            set
            {
                if (_InstanceType != value)
                {
                    OnInstanceTypeChanging(value);
                    ReportPropertyChanging("InstanceType");
                    _InstanceType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InstanceType");
                    OnInstanceTypeChanged();
                }
            }
        }
        private global::System.String _InstanceType;
        partial void OnInstanceTypeChanging(global::System.String value);
        partial void OnInstanceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                if (_InstanceId != value)
                {
                    OnInstanceIdChanging(value);
                    ReportPropertyChanging("InstanceId");
                    _InstanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstanceId");
                    OnInstanceIdChanged();
                }
            }
        }
        private global::System.Int64 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int64 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int64 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FunctionExId
        {
            get
            {
                return _FunctionExId;
            }
            set
            {
                if (_FunctionExId != value)
                {
                    OnFunctionExIdChanging(value);
                    ReportPropertyChanging("FunctionExId");
                    _FunctionExId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FunctionExId");
                    OnFunctionExIdChanged();
                }
            }
        }
        private global::System.Int64 _FunctionExId;
        partial void OnFunctionExIdChanging(global::System.Int64 value);
        partial void OnFunctionExIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="HistoryField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HistoryField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HistoryField object.
        /// </summary>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        public static HistoryField CreateHistoryField(global::System.Int64 fieldId, global::System.Int64 objectId)
        {
            HistoryField historyField = new HistoryField();
            historyField.FieldId = fieldId;
            historyField.ObjectId = objectId;
            return historyField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                if (_FieldId != value)
                {
                    OnFieldIdChanging(value);
                    ReportPropertyChanging("FieldId");
                    _FieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FieldId");
                    OnFieldIdChanged();
                }
            }
        }
        private global::System.Int64 _FieldId;
        partial void OnFieldIdChanging(global::System.Int64 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int64 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompressionTolerance
        {
            get
            {
                return _CompressionTolerance;
            }
            set
            {
                OnCompressionToleranceChanging(value);
                ReportPropertyChanging("CompressionTolerance");
                _CompressionTolerance = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompressionTolerance");
                OnCompressionToleranceChanged();
            }
        }
        private global::System.String _CompressionTolerance;
        partial void OnCompressionToleranceChanging(global::System.String value);
        partial void OnCompressionToleranceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompressionType
        {
            get
            {
                return _CompressionType;
            }
            set
            {
                OnCompressionTypeChanging(value);
                ReportPropertyChanging("CompressionType");
                _CompressionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompressionType");
                OnCompressionTypeChanged();
            }
        }
        private global::System.String _CompressionType;
        partial void OnCompressionTypeChanging(global::System.String value);
        partial void OnCompressionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="HistoryNode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HistoryNode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HistoryNode object.
        /// </summary>
        /// <param name="nodeId">Initial value of the NodeId property.</param>
        public static HistoryNode CreateHistoryNode(global::System.Int64 nodeId)
        {
            HistoryNode historyNode = new HistoryNode();
            historyNode.NodeId = nodeId;
            return historyNode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                if (_NodeId != value)
                {
                    OnNodeIdChanging(value);
                    ReportPropertyChanging("NodeId");
                    _NodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NodeId");
                    OnNodeIdChanged();
                }
            }
        }
        private global::System.Int64 _NodeId;
        partial void OnNodeIdChanging(global::System.Int64 value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Identity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Identity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Identity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="passwordEncrypted">Initial value of the PasswordEncrypted property.</param>
        /// <param name="secretKey">Initial value of the SecretKey property.</param>
        public static Identity CreateIdentity(global::System.Int64 id, global::System.String name, global::System.String passwordEncrypted, global::System.String secretKey)
        {
            Identity identity = new Identity();
            identity.Id = id;
            identity.Name = name;
            identity.PasswordEncrypted = passwordEncrypted;
            identity.SecretKey = secretKey;
            return identity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordEncrypted
        {
            get
            {
                return _PasswordEncrypted;
            }
            set
            {
                OnPasswordEncryptedChanging(value);
                ReportPropertyChanging("PasswordEncrypted");
                _PasswordEncrypted = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordEncrypted");
                OnPasswordEncryptedChanged();
            }
        }
        private global::System.String _PasswordEncrypted;
        partial void OnPasswordEncryptedChanging(global::System.String value);
        partial void OnPasswordEncryptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecretKey
        {
            get
            {
                return _SecretKey;
            }
            set
            {
                OnSecretKeyChanging(value);
                ReportPropertyChanging("SecretKey");
                _SecretKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecretKey");
                OnSecretKeyChanged();
            }
        }
        private global::System.String _SecretKey;
        partial void OnSecretKeyChanging(global::System.String value);
        partial void OnSecretKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="IdentityRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IdentityRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IdentityRole object.
        /// </summary>
        /// <param name="identityId">Initial value of the IdentityId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static IdentityRole CreateIdentityRole(global::System.Int32 identityId, global::System.Int32 roleId)
        {
            IdentityRole identityRole = new IdentityRole();
            identityRole.IdentityId = identityId;
            identityRole.RoleId = roleId;
            return identityRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdentityId
        {
            get
            {
                return _IdentityId;
            }
            set
            {
                if (_IdentityId != value)
                {
                    OnIdentityIdChanging(value);
                    ReportPropertyChanging("IdentityId");
                    _IdentityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdentityId");
                    OnIdentityIdChanged();
                }
            }
        }
        private global::System.Int32 _IdentityId;
        partial void OnIdentityIdChanging(global::System.Int32 value);
        partial void OnIdentityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Network")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Network : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Network object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="organizationId">Initial value of the OrganizationId property.</param>
        public static Network CreateNetwork(global::System.Int64 id, global::System.String name, global::System.Int64 typeId, global::System.Int64 organizationId)
        {
            Network network = new Network();
            network.Id = id;
            network.Name = name;
            network.TypeId = typeId;
            network.OrganizationId = organizationId;
            return network;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Int64 _TypeId;
        partial void OnTypeIdChanging(global::System.Int64 value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                OnOrganizationIdChanging(value);
                ReportPropertyChanging("OrganizationId");
                _OrganizationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationId");
                OnOrganizationIdChanged();
            }
        }
        private global::System.Int64 _OrganizationId;
        partial void OnOrganizationIdChanging(global::System.Int64 value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="NetworkBridge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetworkBridge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetworkBridge object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="localNodeId">Initial value of the LocalNodeId property.</param>
        /// <param name="remoteNodeId">Initial value of the RemoteNodeId property.</param>
        public static NetworkBridge CreateNetworkBridge(global::System.Int64 id, global::System.Int64 localNodeId, global::System.Int64 remoteNodeId)
        {
            NetworkBridge networkBridge = new NetworkBridge();
            networkBridge.Id = id;
            networkBridge.LocalNodeId = localNodeId;
            networkBridge.RemoteNodeId = remoteNodeId;
            return networkBridge;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LocalNodeId
        {
            get
            {
                return _LocalNodeId;
            }
            set
            {
                OnLocalNodeIdChanging(value);
                ReportPropertyChanging("LocalNodeId");
                _LocalNodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocalNodeId");
                OnLocalNodeIdChanged();
            }
        }
        private global::System.Int64 _LocalNodeId;
        partial void OnLocalNodeIdChanging(global::System.Int64 value);
        partial void OnLocalNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RemoteNodeId
        {
            get
            {
                return _RemoteNodeId;
            }
            set
            {
                OnRemoteNodeIdChanging(value);
                ReportPropertyChanging("RemoteNodeId");
                _RemoteNodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemoteNodeId");
                OnRemoteNodeIdChanged();
            }
        }
        private global::System.Int64 _RemoteNodeId;
        partial void OnRemoteNodeIdChanging(global::System.Int64 value);
        partial void OnRemoteNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="NetworkTopology")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetworkTopology : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetworkTopology object.
        /// </summary>
        /// <param name="networkSourceId">Initial value of the NetworkSourceId property.</param>
        /// <param name="networkDestinationId">Initial value of the NetworkDestinationId property.</param>
        /// <param name="p2PTypeId">Initial value of the P2PTypeId property.</param>
        public static NetworkTopology CreateNetworkTopology(global::System.Int64 networkSourceId, global::System.Int64 networkDestinationId, global::System.Int64 p2PTypeId)
        {
            NetworkTopology networkTopology = new NetworkTopology();
            networkTopology.NetworkSourceId = networkSourceId;
            networkTopology.NetworkDestinationId = networkDestinationId;
            networkTopology.P2PTypeId = p2PTypeId;
            return networkTopology;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NetworkSourceId
        {
            get
            {
                return _NetworkSourceId;
            }
            set
            {
                if (_NetworkSourceId != value)
                {
                    OnNetworkSourceIdChanging(value);
                    ReportPropertyChanging("NetworkSourceId");
                    _NetworkSourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NetworkSourceId");
                    OnNetworkSourceIdChanged();
                }
            }
        }
        private global::System.Int64 _NetworkSourceId;
        partial void OnNetworkSourceIdChanging(global::System.Int64 value);
        partial void OnNetworkSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NetworkDestinationId
        {
            get
            {
                return _NetworkDestinationId;
            }
            set
            {
                if (_NetworkDestinationId != value)
                {
                    OnNetworkDestinationIdChanging(value);
                    ReportPropertyChanging("NetworkDestinationId");
                    _NetworkDestinationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NetworkDestinationId");
                    OnNetworkDestinationIdChanged();
                }
            }
        }
        private global::System.Int64 _NetworkDestinationId;
        partial void OnNetworkDestinationIdChanging(global::System.Int64 value);
        partial void OnNetworkDestinationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 P2PTypeId
        {
            get
            {
                return _P2PTypeId;
            }
            set
            {
                if (_P2PTypeId != value)
                {
                    OnP2PTypeIdChanging(value);
                    ReportPropertyChanging("P2PTypeId");
                    _P2PTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("P2PTypeId");
                    OnP2PTypeIdChanged();
                }
            }
        }
        private global::System.Int64 _P2PTypeId;
        partial void OnP2PTypeIdChanging(global::System.Int64 value);
        partial void OnP2PTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="NetworkTopologyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetworkTopologyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetworkTopologyType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="p2PType">Initial value of the P2PType property.</param>
        public static NetworkTopologyType CreateNetworkTopologyType(global::System.Int64 id, global::System.String p2PType)
        {
            NetworkTopologyType networkTopologyType = new NetworkTopologyType();
            networkTopologyType.Id = id;
            networkTopologyType.P2PType = p2PType;
            return networkTopologyType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String P2PType
        {
            get
            {
                return _P2PType;
            }
            set
            {
                OnP2PTypeChanging(value);
                ReportPropertyChanging("P2PType");
                _P2PType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("P2PType");
                OnP2PTypeChanged();
            }
        }
        private global::System.String _P2PType;
        partial void OnP2PTypeChanging(global::System.String value);
        partial void OnP2PTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="NetworkType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetworkType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetworkType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static NetworkType CreateNetworkType(global::System.Int64 id, global::System.String name)
        {
            NetworkType networkType = new NetworkType();
            networkType.Id = id;
            networkType.Name = name;
            return networkType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Node")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Node : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Node object.
        /// </summary>
        /// <param name="identityId">Initial value of the IdentityId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static Node CreateNode(global::System.Int64 identityId, global::System.Int64 networkId)
        {
            Node node = new Node();
            node.IdentityId = identityId;
            node.NetworkId = networkId;
            return node;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdentityId
        {
            get
            {
                return _IdentityId;
            }
            set
            {
                if (_IdentityId != value)
                {
                    OnIdentityIdChanging(value);
                    ReportPropertyChanging("IdentityId");
                    _IdentityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdentityId");
                    OnIdentityIdChanged();
                }
            }
        }
        private global::System.Int64 _IdentityId;
        partial void OnIdentityIdChanging(global::System.Int64 value);
        partial void OnIdentityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private global::System.Int64 _NetworkId;
        partial void OnNetworkIdChanging(global::System.Int64 value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="NodeEndPoint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NodeEndPoint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NodeEndPoint object.
        /// </summary>
        /// <param name="nodeId">Initial value of the NodeId property.</param>
        /// <param name="protocolId">Initial value of the ProtocolId property.</param>
        public static NodeEndPoint CreateNodeEndPoint(global::System.Int64 nodeId, global::System.Int64 protocolId)
        {
            NodeEndPoint nodeEndPoint = new NodeEndPoint();
            nodeEndPoint.NodeId = nodeId;
            nodeEndPoint.ProtocolId = protocolId;
            return nodeEndPoint;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                if (_NodeId != value)
                {
                    OnNodeIdChanging(value);
                    ReportPropertyChanging("NodeId");
                    _NodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NodeId");
                    OnNodeIdChanged();
                }
            }
        }
        private global::System.Int64 _NodeId;
        partial void OnNodeIdChanging(global::System.Int64 value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProtocolId
        {
            get
            {
                return _ProtocolId;
            }
            set
            {
                if (_ProtocolId != value)
                {
                    OnProtocolIdChanging(value);
                    ReportPropertyChanging("ProtocolId");
                    _ProtocolId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProtocolId");
                    OnProtocolIdChanged();
                }
            }
        }
        private global::System.Int64 _ProtocolId;
        partial void OnProtocolIdChanging(global::System.Int64 value);
        partial void OnProtocolIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HostNameOrIP
        {
            get
            {
                return _HostNameOrIP;
            }
            set
            {
                OnHostNameOrIPChanging(value);
                ReportPropertyChanging("HostNameOrIP");
                _HostNameOrIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HostNameOrIP");
                OnHostNameOrIPChanged();
            }
        }
        private global::System.String _HostNameOrIP;
        partial void OnHostNameOrIPChanging(global::System.String value);
        partial void OnHostNameOrIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Port
        {
            get
            {
                return _Port;
            }
            set
            {
                OnPortChanging(value);
                ReportPropertyChanging("Port");
                _Port = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Port");
                OnPortChanged();
            }
        }
        private Nullable<global::System.Int64> _Port;
        partial void OnPortChanging(Nullable<global::System.Int64> value);
        partial void OnPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Object")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Object : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Object object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="platformId">Initial value of the PlatformId property.</param>
        public static Object CreateObject(global::System.Int64 id, global::System.Int64 platformId)
        {
            Object @object = new Object();
            @object.Id = id;
            @object.PlatformId = platformId;
            return @object;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                OnOrganizationIdChanging(value);
                ReportPropertyChanging("OrganizationId");
                _OrganizationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationId");
                OnOrganizationIdChanged();
            }
        }
        private Nullable<global::System.Int64> _OrganizationId;
        partial void OnOrganizationIdChanging(Nullable<global::System.Int64> value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PlatformId
        {
            get
            {
                return _PlatformId;
            }
            set
            {
                OnPlatformIdChanging(value);
                ReportPropertyChanging("PlatformId");
                _PlatformId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlatformId");
                OnPlatformIdChanged();
            }
        }
        private global::System.Int64 _PlatformId;
        partial void OnPlatformIdChanging(global::System.Int64 value);
        partial void OnPlatformIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="ObjectHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectHistory object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="nodeId">Initial value of the NodeId property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        public static ObjectHistory CreateObjectHistory(global::System.Int64 objectId, global::System.Int64 nodeId, global::System.DateTime startDate, global::System.DateTime endDate)
        {
            ObjectHistory objectHistory = new ObjectHistory();
            objectHistory.ObjectId = objectId;
            objectHistory.NodeId = nodeId;
            objectHistory.StartDate = startDate;
            objectHistory.EndDate = endDate;
            return objectHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int64 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                if (_NodeId != value)
                {
                    OnNodeIdChanging(value);
                    ReportPropertyChanging("NodeId");
                    _NodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NodeId");
                    OnNodeIdChanged();
                }
            }
        }
        private global::System.Int64 _NodeId;
        partial void OnNodeIdChanging(global::System.Int64 value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                if (_StartDate != value)
                {
                    OnStartDateChanging(value);
                    ReportPropertyChanging("StartDate");
                    _StartDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StartDate");
                    OnStartDateChanged();
                }
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                if (_EndDate != value)
                {
                    OnEndDateChanging(value);
                    ReportPropertyChanging("EndDate");
                    _EndDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EndDate");
                    OnEndDateChanged();
                }
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultCompressionStrategyType
        {
            get
            {
                return _DefaultCompressionStrategyType;
            }
            set
            {
                OnDefaultCompressionStrategyTypeChanging(value);
                ReportPropertyChanging("DefaultCompressionStrategyType");
                _DefaultCompressionStrategyType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultCompressionStrategyType");
                OnDefaultCompressionStrategyTypeChanged();
            }
        }
        private global::System.String _DefaultCompressionStrategyType;
        partial void OnDefaultCompressionStrategyTypeChanging(global::System.String value);
        partial void OnDefaultCompressionStrategyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="ObjectSpace")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectSpace : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectSpace object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="organizationId">Initial value of the OrganizationId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ObjectSpace CreateObjectSpace(global::System.Int64 id, global::System.Int64 organizationId, global::System.String name)
        {
            ObjectSpace objectSpace = new ObjectSpace();
            objectSpace.Id = id;
            objectSpace.OrganizationId = organizationId;
            objectSpace.Name = name;
            return objectSpace;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                OnOrganizationIdChanging(value);
                ReportPropertyChanging("OrganizationId");
                _OrganizationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationId");
                OnOrganizationIdChanged();
            }
        }
        private global::System.Int64 _OrganizationId;
        partial void OnOrganizationIdChanging(global::System.Int64 value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="ObjectSpaceObject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectSpaceObject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectSpaceObject object.
        /// </summary>
        /// <param name="objectSpaceId">Initial value of the ObjectSpaceId property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        public static ObjectSpaceObject CreateObjectSpaceObject(global::System.Int64 objectSpaceId, global::System.Int64 objectId)
        {
            ObjectSpaceObject objectSpaceObject = new ObjectSpaceObject();
            objectSpaceObject.ObjectSpaceId = objectSpaceId;
            objectSpaceObject.ObjectId = objectId;
            return objectSpaceObject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectSpaceId
        {
            get
            {
                return _ObjectSpaceId;
            }
            set
            {
                if (_ObjectSpaceId != value)
                {
                    OnObjectSpaceIdChanging(value);
                    ReportPropertyChanging("ObjectSpaceId");
                    _ObjectSpaceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectSpaceId");
                    OnObjectSpaceIdChanged();
                }
            }
        }
        private global::System.Int64 _ObjectSpaceId;
        partial void OnObjectSpaceIdChanging(global::System.Int64 value);
        partial void OnObjectSpaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int64 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Organization CreateOrganization(global::System.Int64 id, global::System.String name)
        {
            Organization organization = new Organization();
            organization.Id = id;
            organization.Name = name;
            return organization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="OrganizationIdentity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganizationIdentity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrganizationIdentity object.
        /// </summary>
        /// <param name="organizationId">Initial value of the OrganizationId property.</param>
        /// <param name="identityId">Initial value of the IdentityId property.</param>
        public static OrganizationIdentity CreateOrganizationIdentity(global::System.Int32 organizationId, global::System.Int32 identityId)
        {
            OrganizationIdentity organizationIdentity = new OrganizationIdentity();
            organizationIdentity.OrganizationId = organizationId;
            organizationIdentity.IdentityId = identityId;
            return organizationIdentity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                if (_OrganizationId != value)
                {
                    OnOrganizationIdChanging(value);
                    ReportPropertyChanging("OrganizationId");
                    _OrganizationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrganizationId");
                    OnOrganizationIdChanged();
                }
            }
        }
        private global::System.Int32 _OrganizationId;
        partial void OnOrganizationIdChanging(global::System.Int32 value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdentityId
        {
            get
            {
                return _IdentityId;
            }
            set
            {
                if (_IdentityId != value)
                {
                    OnIdentityIdChanging(value);
                    ReportPropertyChanging("IdentityId");
                    _IdentityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdentityId");
                    OnIdentityIdChanged();
                }
            }
        }
        private global::System.Int32 _IdentityId;
        partial void OnIdentityIdChanging(global::System.Int32 value);
        partial void OnIdentityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Platform")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Platform : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Platform object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Platform CreatePlatform(global::System.Int64 id, global::System.String name)
        {
            Platform platform = new Platform();
            platform.Id = id;
            platform.Name = name;
            return platform;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="PlatformContentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlatformContentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlatformContentType object.
        /// </summary>
        /// <param name="platformId">Initial value of the PlatformId property.</param>
        /// <param name="contentTypeId">Initial value of the ContentTypeId property.</param>
        public static PlatformContentType CreatePlatformContentType(global::System.Int64 platformId, global::System.Int64 contentTypeId)
        {
            PlatformContentType platformContentType = new PlatformContentType();
            platformContentType.PlatformId = platformId;
            platformContentType.ContentTypeId = contentTypeId;
            return platformContentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PlatformId
        {
            get
            {
                return _PlatformId;
            }
            set
            {
                if (_PlatformId != value)
                {
                    OnPlatformIdChanging(value);
                    ReportPropertyChanging("PlatformId");
                    _PlatformId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlatformId");
                    OnPlatformIdChanged();
                }
            }
        }
        private global::System.Int64 _PlatformId;
        partial void OnPlatformIdChanging(global::System.Int64 value);
        partial void OnPlatformIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ContentTypeId
        {
            get
            {
                return _ContentTypeId;
            }
            set
            {
                if (_ContentTypeId != value)
                {
                    OnContentTypeIdChanging(value);
                    ReportPropertyChanging("ContentTypeId");
                    _ContentTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentTypeId");
                    OnContentTypeIdChanged();
                }
            }
        }
        private global::System.Int64 _ContentTypeId;
        partial void OnContentTypeIdChanging(global::System.Int64 value);
        partial void OnContentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="PlatformOrganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlatformOrganization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlatformOrganization object.
        /// </summary>
        /// <param name="organizationId">Initial value of the OrganizationId property.</param>
        /// <param name="platformId">Initial value of the PlatformId property.</param>
        public static PlatformOrganization CreatePlatformOrganization(global::System.Int32 organizationId, global::System.Int32 platformId)
        {
            PlatformOrganization platformOrganization = new PlatformOrganization();
            platformOrganization.OrganizationId = organizationId;
            platformOrganization.PlatformId = platformId;
            return platformOrganization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                if (_OrganizationId != value)
                {
                    OnOrganizationIdChanging(value);
                    ReportPropertyChanging("OrganizationId");
                    _OrganizationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrganizationId");
                    OnOrganizationIdChanged();
                }
            }
        }
        private global::System.Int32 _OrganizationId;
        partial void OnOrganizationIdChanging(global::System.Int32 value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlatformId
        {
            get
            {
                return _PlatformId;
            }
            set
            {
                if (_PlatformId != value)
                {
                    OnPlatformIdChanging(value);
                    ReportPropertyChanging("PlatformId");
                    _PlatformId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlatformId");
                    OnPlatformIdChanged();
                }
            }
        }
        private global::System.Int32 _PlatformId;
        partial void OnPlatformIdChanging(global::System.Int32 value);
        partial void OnPlatformIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="PlatformRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlatformRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlatformRole object.
        /// </summary>
        /// <param name="platformId">Initial value of the PlatformId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static PlatformRole CreatePlatformRole(global::System.Int32 platformId, global::System.Int32 roleId)
        {
            PlatformRole platformRole = new PlatformRole();
            platformRole.PlatformId = platformId;
            platformRole.RoleId = roleId;
            return platformRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlatformId
        {
            get
            {
                return _PlatformId;
            }
            set
            {
                if (_PlatformId != value)
                {
                    OnPlatformIdChanging(value);
                    ReportPropertyChanging("PlatformId");
                    _PlatformId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlatformId");
                    OnPlatformIdChanged();
                }
            }
        }
        private global::System.Int32 _PlatformId;
        partial void OnPlatformIdChanging(global::System.Int32 value);
        partial void OnPlatformIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="PropertyEx")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyEx : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyEx object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static PropertyEx CreatePropertyEx(global::System.Int64 id, global::System.String name, global::System.String type)
        {
            PropertyEx propertyEx = new PropertyEx();
            propertyEx.Id = id;
            propertyEx.Name = name;
            propertyEx.Type = type;
            return propertyEx;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String References
        {
            get
            {
                return _References;
            }
            set
            {
                OnReferencesChanging(value);
                ReportPropertyChanging("References");
                _References = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("References");
                OnReferencesChanged();
            }
        }
        private global::System.String _References;
        partial void OnReferencesChanging(global::System.String value);
        partial void OnReferencesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="PropertyExEvaluated")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyExEvaluated : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyExEvaluated object.
        /// </summary>
        /// <param name="instanceType">Initial value of the InstanceType property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="propertyExId">Initial value of the PropertyExId property.</param>
        public static PropertyExEvaluated CreatePropertyExEvaluated(global::System.String instanceType, global::System.Int64 instanceId, global::System.Int64 objectId, global::System.Int64 propertyExId)
        {
            PropertyExEvaluated propertyExEvaluated = new PropertyExEvaluated();
            propertyExEvaluated.InstanceType = instanceType;
            propertyExEvaluated.InstanceId = instanceId;
            propertyExEvaluated.ObjectId = objectId;
            propertyExEvaluated.PropertyExId = propertyExId;
            return propertyExEvaluated;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceType
        {
            get
            {
                return _InstanceType;
            }
            set
            {
                if (_InstanceType != value)
                {
                    OnInstanceTypeChanging(value);
                    ReportPropertyChanging("InstanceType");
                    _InstanceType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InstanceType");
                    OnInstanceTypeChanged();
                }
            }
        }
        private global::System.String _InstanceType;
        partial void OnInstanceTypeChanging(global::System.String value);
        partial void OnInstanceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                if (_InstanceId != value)
                {
                    OnInstanceIdChanging(value);
                    ReportPropertyChanging("InstanceId");
                    _InstanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstanceId");
                    OnInstanceIdChanged();
                }
            }
        }
        private global::System.Int64 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int64 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int64 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PropertyExId
        {
            get
            {
                return _PropertyExId;
            }
            set
            {
                if (_PropertyExId != value)
                {
                    OnPropertyExIdChanging(value);
                    ReportPropertyChanging("PropertyExId");
                    _PropertyExId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyExId");
                    OnPropertyExIdChanged();
                }
            }
        }
        private global::System.Int64 _PropertyExId;
        partial void OnPropertyExIdChanging(global::System.Int64 value);
        partial void OnPropertyExIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GettorCS
        {
            get
            {
                return _GettorCS;
            }
            set
            {
                OnGettorCSChanging(value);
                ReportPropertyChanging("GettorCS");
                _GettorCS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GettorCS");
                OnGettorCSChanged();
            }
        }
        private global::System.String _GettorCS;
        partial void OnGettorCSChanging(global::System.String value);
        partial void OnGettorCSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettorCS
        {
            get
            {
                return _SettorCS;
            }
            set
            {
                OnSettorCSChanging(value);
                ReportPropertyChanging("SettorCS");
                _SettorCS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SettorCS");
                OnSettorCSChanged();
            }
        }
        private global::System.String _SettorCS;
        partial void OnSettorCSChanging(global::System.String value);
        partial void OnSettorCSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BodyCS
        {
            get
            {
                return _BodyCS;
            }
            set
            {
                OnBodyCSChanging(value);
                ReportPropertyChanging("BodyCS");
                _BodyCS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BodyCS");
                OnBodyCSChanged();
            }
        }
        private global::System.String _BodyCS;
        partial void OnBodyCSChanging(global::System.String value);
        partial void OnBodyCSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="PropertyExNumeric")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyExNumeric : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyExNumeric object.
        /// </summary>
        /// <param name="instanceType">Initial value of the InstanceType property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="propertyExId">Initial value of the PropertyExId property.</param>
        public static PropertyExNumeric CreatePropertyExNumeric(global::System.String instanceType, global::System.Int64 instanceId, global::System.Int64 objectId, global::System.Int64 propertyExId)
        {
            PropertyExNumeric propertyExNumeric = new PropertyExNumeric();
            propertyExNumeric.InstanceType = instanceType;
            propertyExNumeric.InstanceId = instanceId;
            propertyExNumeric.ObjectId = objectId;
            propertyExNumeric.PropertyExId = propertyExId;
            return propertyExNumeric;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceType
        {
            get
            {
                return _InstanceType;
            }
            set
            {
                if (_InstanceType != value)
                {
                    OnInstanceTypeChanging(value);
                    ReportPropertyChanging("InstanceType");
                    _InstanceType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InstanceType");
                    OnInstanceTypeChanged();
                }
            }
        }
        private global::System.String _InstanceType;
        partial void OnInstanceTypeChanging(global::System.String value);
        partial void OnInstanceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                if (_InstanceId != value)
                {
                    OnInstanceIdChanging(value);
                    ReportPropertyChanging("InstanceId");
                    _InstanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstanceId");
                    OnInstanceIdChanged();
                }
            }
        }
        private global::System.Int64 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int64 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int64 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PropertyExId
        {
            get
            {
                return _PropertyExId;
            }
            set
            {
                if (_PropertyExId != value)
                {
                    OnPropertyExIdChanging(value);
                    ReportPropertyChanging("PropertyExId");
                    _PropertyExId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyExId");
                    OnPropertyExIdChanged();
                }
            }
        }
        private global::System.Int64 _PropertyExId;
        partial void OnPropertyExIdChanging(global::System.Int64 value);
        partial void OnPropertyExIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _Value;
        partial void OnValueChanging(Nullable<global::System.Decimal> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="PropertyExText")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyExText : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyExText object.
        /// </summary>
        /// <param name="instanceType">Initial value of the InstanceType property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="propertyExId">Initial value of the PropertyExId property.</param>
        public static PropertyExText CreatePropertyExText(global::System.String instanceType, global::System.Int64 instanceId, global::System.Int64 objectId, global::System.Int64 propertyExId)
        {
            PropertyExText propertyExText = new PropertyExText();
            propertyExText.InstanceType = instanceType;
            propertyExText.InstanceId = instanceId;
            propertyExText.ObjectId = objectId;
            propertyExText.PropertyExId = propertyExId;
            return propertyExText;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceType
        {
            get
            {
                return _InstanceType;
            }
            set
            {
                if (_InstanceType != value)
                {
                    OnInstanceTypeChanging(value);
                    ReportPropertyChanging("InstanceType");
                    _InstanceType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InstanceType");
                    OnInstanceTypeChanged();
                }
            }
        }
        private global::System.String _InstanceType;
        partial void OnInstanceTypeChanging(global::System.String value);
        partial void OnInstanceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                if (_InstanceId != value)
                {
                    OnInstanceIdChanging(value);
                    ReportPropertyChanging("InstanceId");
                    _InstanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstanceId");
                    OnInstanceIdChanged();
                }
            }
        }
        private global::System.Int64 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int64 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int64 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PropertyExId
        {
            get
            {
                return _PropertyExId;
            }
            set
            {
                if (_PropertyExId != value)
                {
                    OnPropertyExIdChanging(value);
                    ReportPropertyChanging("PropertyExId");
                    _PropertyExId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyExId");
                    OnPropertyExIdChanged();
                }
            }
        }
        private global::System.Int64 _PropertyExId;
        partial void OnPropertyExIdChanging(global::System.Int64 value);
        partial void OnPropertyExIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="PropertyExTime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyExTime : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyExTime object.
        /// </summary>
        /// <param name="instanceType">Initial value of the InstanceType property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="propertyExId">Initial value of the PropertyExId property.</param>
        public static PropertyExTime CreatePropertyExTime(global::System.String instanceType, global::System.Int64 instanceId, global::System.Int64 objectId, global::System.Int64 propertyExId)
        {
            PropertyExTime propertyExTime = new PropertyExTime();
            propertyExTime.InstanceType = instanceType;
            propertyExTime.InstanceId = instanceId;
            propertyExTime.ObjectId = objectId;
            propertyExTime.PropertyExId = propertyExId;
            return propertyExTime;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceType
        {
            get
            {
                return _InstanceType;
            }
            set
            {
                if (_InstanceType != value)
                {
                    OnInstanceTypeChanging(value);
                    ReportPropertyChanging("InstanceType");
                    _InstanceType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InstanceType");
                    OnInstanceTypeChanged();
                }
            }
        }
        private global::System.String _InstanceType;
        partial void OnInstanceTypeChanging(global::System.String value);
        partial void OnInstanceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                if (_InstanceId != value)
                {
                    OnInstanceIdChanging(value);
                    ReportPropertyChanging("InstanceId");
                    _InstanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstanceId");
                    OnInstanceIdChanged();
                }
            }
        }
        private global::System.Int64 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int64 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int64 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PropertyExId
        {
            get
            {
                return _PropertyExId;
            }
            set
            {
                if (_PropertyExId != value)
                {
                    OnPropertyExIdChanging(value);
                    ReportPropertyChanging("PropertyExId");
                    _PropertyExId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyExId");
                    OnPropertyExIdChanged();
                }
            }
        }
        private global::System.Int64 _PropertyExId;
        partial void OnPropertyExIdChanging(global::System.Int64 value);
        partial void OnPropertyExIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.DateTime> _Value;
        partial void OnValueChanging(Nullable<global::System.DateTime> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Protocol")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Protocol : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Protocol object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Protocol CreateProtocol(global::System.Int64 id, global::System.String name)
        {
            Protocol protocol = new Protocol();
            protocol.Id = id;
            protocol.Name = name;
            return protocol;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Role CreateRole(global::System.Int64 id, global::System.String name)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="SQLITEADMIN_QUERIES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SQLITEADMIN_QUERIES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SQLITEADMIN_QUERIES object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SQLITEADMIN_QUERIES CreateSQLITEADMIN_QUERIES(global::System.Int64 id)
        {
            SQLITEADMIN_QUERIES sQLITEADMIN_QUERIES = new SQLITEADMIN_QUERIES();
            sQLITEADMIN_QUERIES.ID = id;
            return sQLITEADMIN_QUERIES;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SQL
        {
            get
            {
                return _SQL;
            }
            set
            {
                OnSQLChanging(value);
                ReportPropertyChanging("SQL");
                _SQL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SQL");
                OnSQLChanged();
            }
        }
        private global::System.String _SQL;
        partial void OnSQLChanging(global::System.String value);
        partial void OnSQLChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Topic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Topic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Topic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeliveryGuaranteed">Initial value of the IsDeliveryGuaranteed property.</param>
        /// <param name="isSubscriberSpecific">Initial value of the IsSubscriberSpecific property.</param>
        /// <param name="defaultFormat">Initial value of the DefaultFormat property.</param>
        /// <param name="organizationId">Initial value of the OrganizationId property.</param>
        /// <param name="platformId">Initial value of the PlatformId property.</param>
        public static Topic CreateTopic(global::System.Int64 id, global::System.String name, global::System.Boolean isDeliveryGuaranteed, global::System.Boolean isSubscriberSpecific, global::System.String defaultFormat, global::System.Int64 organizationId, global::System.Int64 platformId)
        {
            Topic topic = new Topic();
            topic.Id = id;
            topic.Name = name;
            topic.IsDeliveryGuaranteed = isDeliveryGuaranteed;
            topic.IsSubscriberSpecific = isSubscriberSpecific;
            topic.DefaultFormat = defaultFormat;
            topic.OrganizationId = organizationId;
            topic.PlatformId = platformId;
            return topic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeliveryGuaranteed
        {
            get
            {
                return _IsDeliveryGuaranteed;
            }
            set
            {
                OnIsDeliveryGuaranteedChanging(value);
                ReportPropertyChanging("IsDeliveryGuaranteed");
                _IsDeliveryGuaranteed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeliveryGuaranteed");
                OnIsDeliveryGuaranteedChanged();
            }
        }
        private global::System.Boolean _IsDeliveryGuaranteed;
        partial void OnIsDeliveryGuaranteedChanging(global::System.Boolean value);
        partial void OnIsDeliveryGuaranteedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSubscriberSpecific
        {
            get
            {
                return _IsSubscriberSpecific;
            }
            set
            {
                OnIsSubscriberSpecificChanging(value);
                ReportPropertyChanging("IsSubscriberSpecific");
                _IsSubscriberSpecific = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSubscriberSpecific");
                OnIsSubscriberSpecificChanged();
            }
        }
        private global::System.Boolean _IsSubscriberSpecific;
        partial void OnIsSubscriberSpecificChanging(global::System.Boolean value);
        partial void OnIsSubscriberSpecificChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MulticastIP
        {
            get
            {
                return _MulticastIP;
            }
            set
            {
                OnMulticastIPChanging(value);
                ReportPropertyChanging("MulticastIP");
                _MulticastIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MulticastIP");
                OnMulticastIPChanged();
            }
        }
        private global::System.String _MulticastIP;
        partial void OnMulticastIPChanging(global::System.String value);
        partial void OnMulticastIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MulticastPort
        {
            get
            {
                return _MulticastPort;
            }
            set
            {
                OnMulticastPortChanging(value);
                ReportPropertyChanging("MulticastPort");
                _MulticastPort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MulticastPort");
                OnMulticastPortChanged();
            }
        }
        private Nullable<global::System.Int64> _MulticastPort;
        partial void OnMulticastPortChanging(Nullable<global::System.Int64> value);
        partial void OnMulticastPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DefaultFormat
        {
            get
            {
                return _DefaultFormat;
            }
            set
            {
                OnDefaultFormatChanging(value);
                ReportPropertyChanging("DefaultFormat");
                _DefaultFormat = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DefaultFormat");
                OnDefaultFormatChanged();
            }
        }
        private global::System.String _DefaultFormat;
        partial void OnDefaultFormatChanging(global::System.String value);
        partial void OnDefaultFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                OnOrganizationIdChanging(value);
                ReportPropertyChanging("OrganizationId");
                _OrganizationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationId");
                OnOrganizationIdChanged();
            }
        }
        private global::System.Int64 _OrganizationId;
        partial void OnOrganizationIdChanging(global::System.Int64 value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PlatformId
        {
            get
            {
                return _PlatformId;
            }
            set
            {
                OnPlatformIdChanging(value);
                ReportPropertyChanging("PlatformId");
                _PlatformId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlatformId");
                OnPlatformIdChanged();
            }
        }
        private global::System.Int64 _PlatformId;
        partial void OnPlatformIdChanging(global::System.Int64 value);
        partial void OnPlatformIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="TopicField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TopicField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TopicField object.
        /// </summary>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="topicId">Initial value of the TopicId property.</param>
        public static TopicField CreateTopicField(global::System.Int64 fieldId, global::System.Int64 objectId, global::System.Int64 topicId)
        {
            TopicField topicField = new TopicField();
            topicField.FieldId = fieldId;
            topicField.ObjectId = objectId;
            topicField.TopicId = topicId;
            return topicField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                if (_FieldId != value)
                {
                    OnFieldIdChanging(value);
                    ReportPropertyChanging("FieldId");
                    _FieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FieldId");
                    OnFieldIdChanged();
                }
            }
        }
        private global::System.Int64 _FieldId;
        partial void OnFieldIdChanging(global::System.Int64 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int64 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int64 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TopicId
        {
            get
            {
                return _TopicId;
            }
            set
            {
                if (_TopicId != value)
                {
                    OnTopicIdChanging(value);
                    ReportPropertyChanging("TopicId");
                    _TopicId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TopicId");
                    OnTopicIdChanged();
                }
            }
        }
        private global::System.Int64 _TopicId;
        partial void OnTopicIdChanging(global::System.Int64 value);
        partial void OnTopicIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="UINode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UINode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UINode object.
        /// </summary>
        /// <param name="nodeId">Initial value of the NodeId property.</param>
        /// <param name="uINodeTypeId">Initial value of the UINodeTypeId property.</param>
        public static UINode CreateUINode(global::System.Int64 nodeId, global::System.Int64 uINodeTypeId)
        {
            UINode uINode = new UINode();
            uINode.NodeId = nodeId;
            uINode.UINodeTypeId = uINodeTypeId;
            return uINode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                if (_NodeId != value)
                {
                    OnNodeIdChanging(value);
                    ReportPropertyChanging("NodeId");
                    _NodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NodeId");
                    OnNodeIdChanged();
                }
            }
        }
        private global::System.Int64 _NodeId;
        partial void OnNodeIdChanging(global::System.Int64 value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UINodeTypeId
        {
            get
            {
                return _UINodeTypeId;
            }
            set
            {
                OnUINodeTypeIdChanging(value);
                ReportPropertyChanging("UINodeTypeId");
                _UINodeTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UINodeTypeId");
                OnUINodeTypeIdChanged();
            }
        }
        private global::System.Int64 _UINodeTypeId;
        partial void OnUINodeTypeIdChanging(global::System.Int64 value);
        partial void OnUINodeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="UINodeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UINodeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UINodeType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UINodeType CreateUINodeType(global::System.Int64 id, global::System.String name)
        {
            UINodeType uINodeType = new UINodeType();
            uINodeType.Id = id;
            uINodeType.Name = name;
            return uINodeType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="View")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new View object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="viewTypeId">Initial value of the ViewTypeId property.</param>
        /// <param name="cLRType">Initial value of the CLRType property.</param>
        public static View CreateView(global::System.Int64 id, global::System.String name, global::System.Int64 viewTypeId, global::System.String cLRType)
        {
            View view = new View();
            view.Id = id;
            view.Name = name;
            view.ViewTypeId = viewTypeId;
            view.CLRType = cLRType;
            return view;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IconPath
        {
            get
            {
                return _IconPath;
            }
            set
            {
                OnIconPathChanging(value);
                ReportPropertyChanging("IconPath");
                _IconPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IconPath");
                OnIconPathChanged();
            }
        }
        private global::System.String _IconPath;
        partial void OnIconPathChanging(global::System.String value);
        partial void OnIconPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ViewTypeId
        {
            get
            {
                return _ViewTypeId;
            }
            set
            {
                OnViewTypeIdChanging(value);
                ReportPropertyChanging("ViewTypeId");
                _ViewTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewTypeId");
                OnViewTypeIdChanged();
            }
        }
        private global::System.Int64 _ViewTypeId;
        partial void OnViewTypeIdChanging(global::System.Int64 value);
        partial void OnViewTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CLRType
        {
            get
            {
                return _CLRType;
            }
            set
            {
                OnCLRTypeChanging(value);
                ReportPropertyChanging("CLRType");
                _CLRType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CLRType");
                OnCLRTypeChanged();
            }
        }
        private global::System.String _CLRType;
        partial void OnCLRTypeChanging(global::System.String value);
        partial void OnCLRTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="ViewTopic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ViewTopic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ViewTopic object.
        /// </summary>
        /// <param name="viewId">Initial value of the ViewId property.</param>
        /// <param name="topicId">Initial value of the TopicId property.</param>
        public static ViewTopic CreateViewTopic(global::System.Int64 viewId, global::System.Int64 topicId)
        {
            ViewTopic viewTopic = new ViewTopic();
            viewTopic.ViewId = viewId;
            viewTopic.TopicId = topicId;
            return viewTopic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ViewId
        {
            get
            {
                return _ViewId;
            }
            set
            {
                if (_ViewId != value)
                {
                    OnViewIdChanging(value);
                    ReportPropertyChanging("ViewId");
                    _ViewId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ViewId");
                    OnViewIdChanged();
                }
            }
        }
        private global::System.Int64 _ViewId;
        partial void OnViewIdChanging(global::System.Int64 value);
        partial void OnViewIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TopicId
        {
            get
            {
                return _TopicId;
            }
            set
            {
                if (_TopicId != value)
                {
                    OnTopicIdChanging(value);
                    ReportPropertyChanging("TopicId");
                    _TopicId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TopicId");
                    OnTopicIdChanged();
                }
            }
        }
        private global::System.Int64 _TopicId;
        partial void OnTopicIdChanging(global::System.Int64 value);
        partial void OnTopicIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="ViewType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ViewType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ViewType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ViewType CreateViewType(global::System.Int64 id, global::System.String name)
        {
            ViewType viewType = new ViewType();
            viewType.Id = id;
            viewType.Name = name;
            return viewType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="Window")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Window : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Window object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nodeId">Initial value of the NodeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Window CreateWindow(global::System.Int64 id, global::System.Int64 nodeId, global::System.String name)
        {
            Window window = new Window();
            window.Id = id;
            window.NodeId = nodeId;
            window.Name = name;
            return window;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                OnNodeIdChanging(value);
                ReportPropertyChanging("NodeId");
                _NodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodeId");
                OnNodeIdChanged();
            }
        }
        private global::System.Int64 _NodeId;
        partial void OnNodeIdChanging(global::System.Int64 value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="WindowView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WindowView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WindowView object.
        /// </summary>
        /// <param name="windowId">Initial value of the WindowId property.</param>
        /// <param name="viewId">Initial value of the ViewId property.</param>
        public static WindowView CreateWindowView(global::System.Int64 windowId, global::System.Int64 viewId)
        {
            WindowView windowView = new WindowView();
            windowView.WindowId = windowId;
            windowView.ViewId = viewId;
            return windowView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WindowId
        {
            get
            {
                return _WindowId;
            }
            set
            {
                if (_WindowId != value)
                {
                    OnWindowIdChanging(value);
                    ReportPropertyChanging("WindowId");
                    _WindowId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WindowId");
                    OnWindowIdChanged();
                }
            }
        }
        private global::System.Int64 _WindowId;
        partial void OnWindowIdChanging(global::System.Int64 value);
        partial void OnWindowIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ViewId
        {
            get
            {
                return _ViewId;
            }
            set
            {
                if (_ViewId != value)
                {
                    OnViewIdChanging(value);
                    ReportPropertyChanging("ViewId");
                    _ViewId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ViewId");
                    OnViewIdChanged();
                }
            }
        }
        private global::System.Int64 _ViewId;
        partial void OnViewIdChanging(global::System.Int64 value);
        partial void OnViewIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="WPFNode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WPFNode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WPFNode object.
        /// </summary>
        /// <param name="nodeId">Initial value of the NodeId property.</param>
        public static WPFNode CreateWPFNode(global::System.Int64 nodeId)
        {
            WPFNode wPFNode = new WPFNode();
            wPFNode.NodeId = nodeId;
            return wPFNode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                if (_NodeId != value)
                {
                    OnNodeIdChanging(value);
                    ReportPropertyChanging("NodeId");
                    _NodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NodeId");
                    OnNodeIdChanged();
                }
            }
        }
        private global::System.Int64 _NodeId;
        partial void OnNodeIdChanging(global::System.Int64 value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="WPFTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WPFTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WPFTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="xAML">Initial value of the XAML property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="isMaster">Initial value of the IsMaster property.</param>
        public static WPFTemplate CreateWPFTemplate(global::System.Int64 id, global::System.String name, global::System.String xAML, global::System.String size, global::System.Boolean isMaster)
        {
            WPFTemplate wPFTemplate = new WPFTemplate();
            wPFTemplate.Id = id;
            wPFTemplate.Name = name;
            wPFTemplate.XAML = xAML;
            wPFTemplate.Size = size;
            wPFTemplate.IsMaster = isMaster;
            return wPFTemplate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String XAML
        {
            get
            {
                return _XAML;
            }
            set
            {
                OnXAMLChanging(value);
                ReportPropertyChanging("XAML");
                _XAML = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("XAML");
                OnXAMLChanged();
            }
        }
        private global::System.String _XAML;
        partial void OnXAMLChanging(global::System.String value);
        partial void OnXAMLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MasterTemplateId
        {
            get
            {
                return _MasterTemplateId;
            }
            set
            {
                OnMasterTemplateIdChanging(value);
                ReportPropertyChanging("MasterTemplateId");
                _MasterTemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterTemplateId");
                OnMasterTemplateIdChanged();
            }
        }
        private Nullable<global::System.Int64> _MasterTemplateId;
        partial void OnMasterTemplateIdChanging(Nullable<global::System.Int64> value);
        partial void OnMasterTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMaster
        {
            get
            {
                return _IsMaster;
            }
            set
            {
                OnIsMasterChanging(value);
                ReportPropertyChanging("IsMaster");
                _IsMaster = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMaster");
                OnIsMasterChanged();
            }
        }
        private global::System.Boolean _IsMaster;
        partial void OnIsMasterChanging(global::System.Boolean value);
        partial void OnIsMasterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="WPFTemplateView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WPFTemplateView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WPFTemplateView object.
        /// </summary>
        /// <param name="wPFTemplateId">Initial value of the WPFTemplateId property.</param>
        /// <param name="viewId">Initial value of the ViewId property.</param>
        public static WPFTemplateView CreateWPFTemplateView(global::System.Int64 wPFTemplateId, global::System.Int64 viewId)
        {
            WPFTemplateView wPFTemplateView = new WPFTemplateView();
            wPFTemplateView.WPFTemplateId = wPFTemplateId;
            wPFTemplateView.ViewId = viewId;
            return wPFTemplateView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WPFTemplateId
        {
            get
            {
                return _WPFTemplateId;
            }
            set
            {
                if (_WPFTemplateId != value)
                {
                    OnWPFTemplateIdChanging(value);
                    ReportPropertyChanging("WPFTemplateId");
                    _WPFTemplateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WPFTemplateId");
                    OnWPFTemplateIdChanged();
                }
            }
        }
        private global::System.Int64 _WPFTemplateId;
        partial void OnWPFTemplateIdChanging(global::System.Int64 value);
        partial void OnWPFTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ViewId
        {
            get
            {
                return _ViewId;
            }
            set
            {
                if (_ViewId != value)
                {
                    OnViewIdChanging(value);
                    ReportPropertyChanging("ViewId");
                    _ViewId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ViewId");
                    OnViewIdChanged();
                }
            }
        }
        private global::System.Int64 _ViewId;
        partial void OnViewIdChanging(global::System.Int64 value);
        partial void OnViewIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetaModel", Name="WPFWindow")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WPFWindow : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WPFWindow object.
        /// </summary>
        /// <param name="windowId">Initial value of the WindowId property.</param>
        public static WPFWindow CreateWPFWindow(global::System.Int64 windowId)
        {
            WPFWindow wPFWindow = new WPFWindow();
            wPFWindow.WindowId = windowId;
            return wPFWindow;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WindowId
        {
            get
            {
                return _WindowId;
            }
            set
            {
                if (_WindowId != value)
                {
                    OnWindowIdChanging(value);
                    ReportPropertyChanging("WindowId");
                    _WindowId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WindowId");
                    OnWindowIdChanged();
                }
            }
        }
        private global::System.Int64 _WindowId;
        partial void OnWindowIdChanging(global::System.Int64 value);
        partial void OnWindowIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    
    }

    #endregion

    
}
